{"version":3,"sources":["Api.js","actions/index.js","pages/Login.js","Componente/Header.jsx","Componente/Table.js","Componente/InputSelectMoed.js","Componente/InputDespSelect.js","Componente/InputPagtSelect.js","Componente/InputTextDesc.js","Componente/InputValor.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["fetch","fetchMoedas","json","moedas","api","Object","keys","getMoedas","getDespesas","fetchDespesas","Login","state","email","password","disablEmail","disabPassword","handlerChengeEmail","bind","handlerChengePassword","submitEmail","event","test","target","value","this","setState","length","setUseremail","props","className","htmlFor","type","data-testid","name","id","onChange","minLength","to","onClick","disabled","React","Component","connect","dispath","payload","setUseremailAction","Header","expenses","cont","forEach","currency","exchangeRates","parseFloat","ask","toFixed","user","wallet","Table","handleExcluir","excluiId","excluiDespesas","filter","map","description","tag","method","key","split","dispatch","excluiDespesasAction","i","InputSelectMoed","listmoedas","letras","letra","list","index","InputDespSelect","InputPagtSelect","InputTextDesc","InputValor","min","Wallet","handlerChange","addDespesas","getDespesasThunks","then","object","DOGE","USDT","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","action","currencies","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a27de35.chunk.js","sourcesContent":["async function getMoedas() {\n  try {\n    const fetchMoedas = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const moedas = await fetchMoedas.json();\n    const api = Object.keys(moedas);\n    return api;\n  } catch (error) {\n    return (error);\n  }\n}\nexport default getMoedas;\n\nexport async function getDespesas() {\n  try {\n    const fetchDespesas = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const moedas = await fetchDespesas.json();\n    return moedas;\n  } catch (error) {\n    return (error);\n  }\n}\n","import { getDespesas } from '../Api';\n\n// Coloque aqui suas actions\n\nexport const SET_USEREMAIL = 'SET_USEREMAIL';\nexport const SET_DESPESAS = 'SET_DESPESAS';\nexport const EXCLUIR_DESPESAS = 'EXCLUIR_DESPESAS';\n\nexport const setUseremail = (payload) => ({\n  type: SET_USEREMAIL,\n  payload,\n\n});\n\nexport const setDespesas = (payload) => ({\n  type: SET_DESPESAS,\n  payload,\n\n});\n\nexport const excluiDespesas = (payload) => ({\n  type: EXCLUIR_DESPESAS,\n  payload,\n\n});\n\nexport const getDespesasThunk = (expenses) => async (dispatch) => {\n  getDespesas().then((object) => {\n    delete object.DOGE;\n    delete object.USDT;\n    expenses.exchangeRates = object;\n    dispatch(setDespesas(expenses));\n  });\n};\n","/* eslint-disable react/jsx-curly-spacing */\n/* eslint-disable quotes */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setUseremail as setUseremailAction } from \"../actions\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      disablEmail: false,\n      disabPassword: false,\n    };\n    this.handlerChengeEmail = this.handlerChengeEmail.bind(this);\n    this.handlerChengePassword = this.handlerChengePassword.bind(this);\n    this.submitEmail = this.submitEmail.bind(this);\n  }\n  // ref:https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n\n  handlerChengeEmail(event) {\n    const validEmail = /\\S+@\\S+\\.\\S+/;\n    const disablEmail = validEmail.test(event.target.value);\n    this.setState({\n      email: event.target.value,\n      disablEmail,\n    });\n  }\n\n  handlerChengePassword(event) {\n    const lengthWord = 6;\n    const disabPassword = event.target.value.length >= lengthWord;\n\n    this.setState({\n      password: event.target.value,\n      disabPassword,\n    });\n  }\n\n  submitEmail() {\n    const { setUseremail } = this.props;\n    const { email } = this.state;\n    setUseremail(email);\n  }\n\n  render() {\n    const { email, password, disabPassword, disablEmail } = this.state;\n\n    return (\n      <main className=\"mainLogin\">\n        <h1>Fazer o Login Trybe-Wallet</h1>\n        <form className=\".forms\">\n          <fieldset className=\"fieldset\">\n            <label htmlFor=\"email\">\n              Digite o Email:\n              <input\n                type=\"email\"\n                data-testid=\"email-input\"\n                name=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={this.handlerChengeEmail}\n              />\n            </label>\n            <label htmlFor=\"senha\">\n              Digite a Senha:\n              <input\n                type=\"password\"\n                data-testid=\"password-input\"\n                name=\"password\"\n                id=\"senha\"\n                minLength=\"6\"\n                value={password}\n                onChange={this.handlerChengePassword}\n              />\n            </label>\n            <Link to=\"/carteira\">\n              <button\n                type=\"submit\"\n                onClick={this.submitEmail}\n                disabled={!disabPassword || !disablEmail}\n              >\n                Entrar\n              </button>\n            </Link>\n          </fieldset>\n        </form>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  setUseremail: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispath) => ({\n  setUseremail: (payload) => dispath(setUseremailAction(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nclass Header extends React.Component {\n  render() {\n    const { expenses } = this.props;\n    const { email } = this.props;\n    let cont = 0;\n    // referenc usar forEach em Mentoria Tecnicas zoon\n    expenses.forEach(({ value, currency, exchangeRates }) => {\n      cont += parseFloat(value) * parseFloat(exchangeRates[currency].ask);\n    });\n\n    return (\n      <header className=\"header\">\n        <div>\n          <h1>TrybeWallet</h1>\n          <h5 className=\"h5email\" data-testid=\"email-field\">\n            Email:\n            <h4>\n              {email}\n            </h4>\n          </h5>\n        </div>\n        <div className=\"moedaTotal\">\n          <h5 data-testid=\"total-field\">{`Despesa Total: R$ ${cont.toFixed(2)}`}</h5>\n          <h5 data-testid=\"header-currency-field\">BRL</h5>\n        </div>\n        <div>\n          <Link to=\"/\" className=\"linklog\">Sair</Link>\n        </div>\n\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n\n});\n\nexport default connect(mapStateToProps)(Header);\n","/* eslint-disable comma-dangle */\n/* eslint-disable react/jsx-curly-spacing */\n/* eslint-disable quotes */\n/* eslint-disable max-lines-per-function */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { excluiDespesas as excluiDespesasAction } from \"../actions/index\";\n\nclass Table extends React.Component {\n  constructor() {\n    super();\n\n    this.handleExcluir = this.handleExcluir.bind(this);\n  }\n\n  // reference dos colegas do grupo whatsap\n  handleExcluir(excluiId) {\n    const { expenses, excluiDespesas } = this.props;\n    const excluiFilter = expenses.filter(({ id }) => id !== excluiId);\n    excluiDespesas(excluiFilter);\n  }\n\n  // referenc table https://www.w3schools.com/html/tryit.asp?filename=tryhtml_table3\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div className=\"table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses.map(\n              ({\n                id,\n                description,\n                tag,\n                method,\n                value,\n                currency,\n                exchangeRates,\n              }) => (\n                <tr key={id}>\n                  <td>{description}</td>\n                  <td>{tag}</td>\n                  <td>{method}</td>\n                  <td>{value}</td>\n                  <td>{exchangeRates[currency].name.split(\"/\")[0]}</td>\n                  <td>{parseFloat(exchangeRates[currency].ask).toFixed(2)}</td>\n                  <td>{(value * exchangeRates[currency].ask).toFixed(2)}</td>\n                  <td>Real</td>\n                  <td>\n                    <button\n                      className=\"bottonExclu\"\n                      type=\"button\"\n                      data-testid=\"delete-btn\"\n                      onClick={() => this.handleExcluir(id)}\n                    >\n                      Excluir\n                    </button>\n                  </td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  excluiDespesas: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  excluiDespesas: (payload) => dispatch(excluiDespesasAction(payload)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport getMoedas from '../Api';\n\nclass InputSelectMoed extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      listmoedas: [],\n    };\n\n    this.fetchMoedas = this.fetchMoedas.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMoedas();\n  }\n\n  async fetchMoedas() {\n    const listmoedas = await getMoedas();\n    this.setState({\n      listmoedas,\n    });\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n    const { listmoedas } = this.state;\n    const tree = 3;\n    const letras = listmoedas.filter((letra) => letra.length === tree);\n    return (\n      <label htmlFor=\"select\">\n        Moeda:\n        <select\n          name=\"currency\"\n          id=\"select\"\n          value={ value }\n          onChange={ onChange }\n        >\n          { /* <option value=\"\" disabled selected>Selecione uma moeda</option> */ }\n          {letras.map((list, index) => (\n            <option key={ index }>{ list }</option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n}\n\n// referenc checagen de prop https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\nInputSelectMoed.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default InputSelectMoed;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputDespSelect extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n\n      <label htmlFor=\"desp\">\n        Tag:\n        <select\n          name=\"tag\"\n          id=\"desp\"\n          value={ value }\n          onChange={ onChange }\n        >\n\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n}\n// referenc checagen de prop https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\nInputDespSelect.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default InputDespSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputPagtSelect extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n\n      <label htmlFor=\"pagto\">\n        Método de pagamento:\n        <select\n          name=\"method\"\n          id=\"pagto\"\n          value={ value }\n          onChange={ onChange }\n        >\n\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n}\n\n// referenc checagen de prop https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\nInputPagtSelect.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default InputPagtSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputTextDesc extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n\n      <label htmlFor=\"descri\">\n        Descrição:\n        <input\n          type=\"text\"\n          name=\"description\"\n          id=\"descri\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\n// referenc checagen de prop https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\nInputTextDesc.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default InputTextDesc;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputValor extends React.Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n\n      <label htmlFor=\"valor\">\n        Valor:\n        <input\n          type=\"number\"\n          name=\"value\"\n          id=\"valor\"\n          min=\"1\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\n// referenc checagen de prop https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\nInputValor.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default InputValor;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../App.css';\nimport Header from '../Componente/Header';\nimport Table from '../Componente/Table';\nimport InputSelectMoed from '../Componente/InputSelectMoed';\nimport InputDespSelect from '../Componente/InputDespSelect';\nimport InputPagtSelect from '../Componente/InputPagtSelect';\nimport InputTextDesc from '../Componente/InputTextDesc';\nimport InputValor from '../Componente/InputValor';\nimport { getDespesasThunk } from '../actions';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: 10,\n      description: 'Dez Dólares',\n      method: 'Cartão de crédito',\n      currency: 'USD',\n      tag: 'Lazer',\n      exchangeRates: {},\n    };\n\n    this.handlerChange = this.handlerChange.bind(this);\n    this.addDespesas = this.addDespesas.bind(this);\n  }\n\n  handlerChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  addDespesas() {\n    const { getDespesasThunks } = this.props;\n    getDespesasThunks(this.state);\n    const { id } = this.state;\n    this.setState({ id: id + 1 });\n  }\n\n  render() {\n    const { value, description, method, currency, tag } = this.state;\n    return (\n      <div>\n        <Header />\n\n        <form className=\"formValue\">\n          <InputValor value={ value } onChange={ this.handlerChange } />\n          <InputTextDesc value={ description } onChange={ this.handlerChange } />\n          <InputSelectMoed value={ currency } onChange={ this.handlerChange } />\n          <InputPagtSelect value={ method } onChange={ this.handlerChange } />\n          <InputDespSelect value={ tag } onChange={ this.handlerChange } />\n\n          <button\n            className=\"buttonAdd\"\n            type=\"button\"\n            onClick={ this.addDespesas }\n          >\n            Adicionar despesa\n          </button>\n\n        </form>\n        <Table />\n\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  getDespesasThunks: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDespesasThunks: (payload) => dispatch(getDespesasThunk(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_USEREMAIL } from '../actions';\n\n// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst INITIAL_STATE = {\n\n  email: '',\n\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USEREMAIL:\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\nexport default user;\n","import { SET_DESPESAS, EXCLUIR_DESPESAS } from '../actions';\n\n// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n// Referenc do desse reducer em Mentoria Técnicas no zoon\nconst INITIAL_STATE = {\n\n  currencies: [],\n  expenses: [],\n\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case SET_DESPESAS:\n    return { ...state,\n      expenses: [...state.expenses, action.payload] };\n  case EXCLUIR_DESPESAS:\n    return { ...state, expenses: [...action.payload] };\n  default:\n    return state;\n  }\n}\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","/* eslint-disable comma-dangle */\n/* eslint-disable quotes */\n/* eslint-disable react/jsx-curly-spacing */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}